#BlueJ class context
comment0.target=test
comment1.params=
comment1.target=void\ main()
comment10.params=ray
comment10.target=double\ go2(int[])
comment11.params=
comment11.target=void\ wNum()
comment12.params=list
comment12.target=double\ findBig(double[])
comment2.params=num
comment2.target=int\ getIt(int)
comment3.params=
comment3.target=int\ add()
comment3.text=\n\ \ \ \ //8\n\ \ \ \ public\ static\ double\ go(\ int[]\ ray\ ){\n\ \ \ \ int[]\ list\ \=\ {2,12,11,45,52,36,5,3,1};\n\ \ \ \ int\ val\ \=\ 0;\n\ \ \ \ for(int\ i\=0;\ i\ <\ ray.length;\ i\ \=\ \ i\ +\ 2){\n\ \ \ \ val\ \=\ val\ +\ ray[i];\n\ \ \ \ }\n\ \ \ \ return\ (val);\n\ \ \ \ }\n\n\ \ \ \ //9\n\ \ \ \ int[]\ list\ \=\ {2,12,11,45,52,36};\n\ \ \ \ public\ static\ int\ go(\ int[]\ ray\ )\n\ \ \ \ {\ int\ val\ \=\ Integer.MIN_VALUE;\n\ \ \ \ for(int\ i\=0;\ i\ <\ ray.length;\ i++)\n\ \ \ \ if(\ ray[i]\ >\ val\ )\n\ \ \ \ val\ \=\ ray[i];\n\ \ \ \ return\ val;\n\ \ \ \ }\n\n
comment4.params=x
comment4.target=boolean\ check(int)
comment5.params=
comment5.target=void\ twenty()
comment6.params=
comment6.target=void\ bList()
comment7.params=
comment7.target=void\ cList()
comment8.params=
comment8.target=void\ dList()
comment9.params=
comment9.target=int\ inOut()
numComments=13
